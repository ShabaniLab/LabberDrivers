# Instrument driver configuration file.

[General settings]

# The name is shown in all the configuration windows
name: Keithley 2000 Multimeter

# The version string should be updated whenever changes are made to this config file
version: 1.1

# Name of folder containing the code defining a custom driver. Do not define this item
# or leave it blank for any standard driver based on the built-in VISA interface.
driver_path:



[Model and options]
# The option section allow instruments with different options to use the same driver

# Check instrument model id at startup (True or False). Default is False
check_model: True

# List of models supported by this driver
model_str_1: 2000

# Valid model strings returned by the instrument. Default value = model_str
model_id_1: KEITHLEY INSTRUMENTS INC.,MODEL 2



# General VISA settings for the instrument.
[VISA settings]

# Enable or disable communication over the VISA protocol (True or False)
# If False, the driver will not perform any operations (unless there is a custom driver).
use_visa = True

# Reset the interface (not the instrument) at startup (True or False).  Default is False
reset: True

# Time (in seconds) before the timing out while waiting for an instrument response. Default is 5
timeout: 2

# Query instrument errors (True or False).  If True, every command sent to the device will
# be followed by an error query.  This is useful when testing new setups, but may degrade
# performance by slowing down the instrument communication. 
query_instr_errors: True 

# Bit mask for checking status byte errors (default is 255, include all errors)
# The bits signal the following errors:
# 0: Operation
# 1: Request control
# 2: Query error
# 3: Device error
# 4: Execution error
# 5: Command error
# 6: User request
# 7: Power on
error_bit_mask: 255

# SCPI string to be used when querying for instrument error messages
error_cmd: :SYST:ERR?

# Initialization commands are sent to the instrument when starting the driver
# *RST will reset the device, *CLS clears the interface
init: :TRIG:SOUR IMM;

# Final commands sent to the instrument when closing the driver
final: 

# Define quantities in sections. This list is a selection of allowed keywords,
# see the manual for a full list of options
#   datatype:      The datatype should be one of DOUBLE, BOOLEAN, COMBO,
#                  STRING, COMPLEX, VECTOR, VECTOR_COMPLEX, PATH or BUTTON.
#   unit:          Quantity unit
#   set_cmd:       Command used to send data to the instrument. Put <*> where the value should appear.
#   get_cmd:       Command used to get the data from the instrument. Default is set_cmd?
#   def_value:     Default value
#   low_lim:       Lowest allowable value.  Defaults to -INF
#   high_lim:      Highest allowable values.  Defaults to +INF
#   combo_def_1:   First option in a pull-down combo box. Only used when datatype=COMBO
#   combo_def_2:   Second option in a pull-down combo box. Only used when datatype=COMBO
#   ...
#   combo_def_n:   nth option in a pull-down combo box. Only used when datatype=COMBO
#   state_quant:   Quantity that determines this control's visibility
#   state_value_1: Value of "state_quant" for which the control is visible
#   state_value_2: Value of "state_quant" for which the control is visible
#   ...
#   state_value_n: Value of "state_quant" for which the control is visible
#   permission:    Sets read/writability, options are BOTH, READ, WRITE or NONE. Default is BOTH 
#   group:         Name of the group where the control belongs.
#   section:       Name of the section where the control belongs.



[Function]
datatype: COMBO
def_value: Voltage DC
combo_def_1: Voltage DC
combo_def_2: Voltage AC
combo_def_3: Current DC
combo_def_4: Current AC
combo_def_5: Resistance (2-wire)
combo_def_6: Resistance (4-wire)
cmd_def_1: "VOLT:DC"
cmd_def_2: "VOLT:AC"
cmd_def_3: "CURR:DC"
cmd_def_4: "CURR:AC"
cmd_def_5: "RES"
cmd_def_6: "FRES"
set_cmd: :FUNC

[Continuous]
datatype: BOOLEAN
def_value: True
set_cmd: :INIT:CONT

[SingleValue]
datatype: DOUBLE
permission: READ
get_cmd: :READ?
state_quant: Continuous
state_value_1: False

[Value]
datatype: DOUBLE
permission: READ
get_cmd: :FETCH?
state_quant: Continuous
state_value_1: True

[Auto-zero]
datatype: BOOLEAN
def_value: True
set_cmd: :ZERO:AUTO
state_quant: Function
state_value_1: Voltage DC
state_value_2: Current DC
state_value_3: Resistance (2-wire)

[Integration time (V_dc)]
datatype: COMBO
def_value: 20 ms
combo_def_1: 200 ms
combo_def_2: 20 ms
combo_def_3: 2 ms
combo_def_4: 0.2 ms
cmd_def_1: 10.00
cmd_def_2: 1.00
cmd_def_3: 0.10
cmd_def_4: 0.01
set_cmd: :VOLT:DC:NPLC <*>
get_cmd: :VOLT:DC:NPLC?
state_quant: Function
state_value_1: Voltage DC

[Auto-range (V_dc)]
datatype: COMBO
def_value: Off
combo_def_1: Off
combo_def_2: On
cmd_def_1: 0
cmd_def_2: 1
set_cmd: :VOLT:DC:RANG:AUTO
group: Input config
state_quant: Function
state_value_1: Voltage DC

[Range (V_dc)]
datatype: COMBO
def_value: 10 V
combo_def_1: 1000 V
combo_def_2: 100 V
combo_def_3: 10 V
combo_def_4: 1 V
combo_def_5: 100 mV
cmd_def_1: +1.00000000E+03
cmd_def_2: +1.00000000E+02
cmd_def_3: +1.00000000E+01
cmd_def_4: +1.00000000E+00
cmd_def_5: +1.00000000E-01
set_cmd: :VOLT:DC:RANG
group: Input config
state_quant: Auto-range (V_dc)
state_value_1: Off

# V AC
[Bandwidth (V_ac)]
datatype: COMBO
def_value: 20 Hz - 300 KHz
combo_def_1: 3 Hz - 300 KHz
combo_def_2: 20 Hz - 300 KHz
combo_def_3: 200 Hz - 300 KHz
cmd_def_1: +3.00000000E+00
cmd_def_2: +2.00000000E+01
cmd_def_3: +2.00000000E+02
set_cmd: :VOLT:AC:DET:BAND
state_quant: Function
state_value_1: Voltage AC

[Auto-range (V_ac)]
datatype: COMBO
def_value: Off
combo_def_1: Off
combo_def_2: On
cmd_def_1: 0
cmd_def_2: 1
set_cmd: :VOLT:AC:RANG:AUTO
group: Input config
state_quant: Function
state_value_1: Voltage AC

[Range (V_ac)]
datatype: COMBO
def_value: 10 V
combo_def_1: 750 V
combo_def_2: 100 V
combo_def_3: 10 V
combo_def_4: 1 V
combo_def_5: 100 mV
cmd_def_1: +7.50000000E+02
cmd_def_2: +1.00000000E+02
cmd_def_3: +1.00000000E+01
cmd_def_4: +1.00000000E+00
cmd_def_5: +1.00000000E-01
set_cmd: :VOLT:AC:RANG
group: Input config
state_quant: Auto-range (V_ac)
state_value_1: Off



# I DC
[Integration time (I_dc)]
datatype: COMBO
def_value: 20 ms
combo_def_1: 200 ms
combo_def_2: 20 ms
combo_def_3: 2 ms
combo_def_4: 0.2 ms
cmd_def_1: 10.00
cmd_def_2: 1.00
cmd_def_3: 0.10
cmd_def_4: 0.01
set_cmd: :CURR:DC:NPLC <*>
get_cmd: :CURR:DC:NPLC?
state_quant: Function
state_value_1: Current DC

[Auto-range (I_dc)]
datatype: COMBO
def_value: Off
combo_def_1: Off
combo_def_2: On
cmd_def_1: 0
cmd_def_2: 1
set_cmd: :CURR:DC:RANG:AUTO
group: Input config
state_quant: Function
state_value_1: Current DC

[Range (I_dc)]
datatype: COMBO
def_value: 100 mA
combo_def_1: 3 A
combo_def_2: 1 A
combo_def_3: 100 mA
combo_def_4: 10 mA
cmd_def_1: +3.00000000E+00
cmd_def_2: +1.00000000E+00
cmd_def_3: +1.00000000E-01
cmd_def_4: +1.00000000E-02
set_cmd: :CURR:DC:RANG
group: Input config
state_quant: Auto-range (I_dc)
state_value_1: Off


# I AC
[Bandwidth (I_ac)]
datatype: COMBO
def_value: 20 Hz - 300 KHz
combo_def_1: 3 Hz - 300 KHz
combo_def_2: 20 Hz - 300 KHz
combo_def_3: 200 Hz - 300 KHz
cmd_def_1: +3.00000000E+00
cmd_def_2: +2.00000000E+01
cmd_def_3: +2.00000000E+02
set_cmd: :CURR:AC:DET:BAND
state_quant: Function
state_value_1: Current AC

[Auto-range (I_ac)]
datatype: COMBO
def_value: Off
combo_def_1: Off
combo_def_2: On
cmd_def_1: 0
cmd_def_2: 1
set_cmd: :CURR:AC:RANG:AUTO
group: Input config
state_quant: Function
state_value_1: Current AC

[Range (I_ac)]
datatype: COMBO
def_value: 1 A
combo_def_1: 3 A
combo_def_2: 1 A
cmd_def_1: +3.00000000E+00
cmd_def_2: +1.00000000E+00
set_cmd: :CURR:AC:RANG
group: Input config
state_quant: Auto-range (I_ac)
state_value_1: Off



# R 2-wire
[Integration time (R-2w)]
datatype: COMBO
def_value: 20 ms
combo_def_1: 2 s
combo_def_2: 200 ms
combo_def_3: 20 ms
combo_def_4: 3 ms
combo_def_5: 0.4 ms
cmd_def_1: +1.00000000E+02
cmd_def_2: +1.00000000E+01
cmd_def_3: +1.00000000E+00
cmd_def_4: +2.00000000E-01
cmd_def_5: +2.00000000E-02
set_cmd: :RES:NPLC <*>
get_cmd: :RES:NPLC?
state_quant: Function
state_value_1: Resistance (2-wire)

[Auto-range (R-2w)]
datatype: COMBO
def_value: Off
combo_def_1: Off
combo_def_2: On
cmd_def_1: 0
cmd_def_2: 1
set_cmd: :RES:RANG:AUTO
group: Input config
state_quant: Function
state_value_1: Resistance (2-wire)

[Range (R-2w)]
datatype: COMBO
def_value: 1 MOhm
combo_def_1: 100 MOhm
combo_def_2: 10 MOhm
combo_def_3: 1 MOhm
combo_def_4: 100 kOhm
combo_def_5: 10 kOhm
combo_def_6: 1 kOhm
combo_def_7: 100 Ohm
cmd_def_1: +1.00000000E+08
cmd_def_2: +1.00000000E+07
cmd_def_3: +1.00000000E+06
cmd_def_4: +1.00000000E+05
cmd_def_5: +1.00000000E+04
cmd_def_6: +1.00000000E+03
cmd_def_7: +1.00000000E+02
set_cmd: :RES:RANG
group: Input config
state_quant: Auto-range (R-2w)
state_value_1: Off

# R 4-wire
[Integration time (R-4w)]
datatype: COMBO
def_value: 20 ms
combo_def_1: 2 s
combo_def_2: 200 ms
combo_def_3: 20 ms
combo_def_4: 3 ms
combo_def_5: 0.4 ms
cmd_def_1: +1.00000000E+02
cmd_def_2: +1.00000000E+01
cmd_def_3: +1.00000000E+00
cmd_def_4: +2.00000000E-01
cmd_def_5: +2.00000000E-02
set_cmd: :FRES:NPLC <*>
get_cmd: :FRES:NPLC?
state_quant: Function
state_value_1: Resistance (4-wire)

[Auto-range (R-4w)]
datatype: COMBO
def_value: Off
combo_def_1: Off
combo_def_2: On
cmd_def_1: 0
cmd_def_2: 1
set_cmd: :FRES:RANG:AUTO
group: Input config
state_quant: Function
state_value_1: Resistance (4-wire)

[Range (R-4w)]
datatype: COMBO
def_value: 1 MOhm
combo_def_1: 100 MOhm
combo_def_2: 10 MOhm
combo_def_3: 1 MOhm
combo_def_4: 100 kOhm
combo_def_5: 10 kOhm
combo_def_6: 1 kOhm
combo_def_7: 100 Ohm
cmd_def_1: +1.00000000E+08
cmd_def_2: +1.00000000E+07
cmd_def_3: +1.00000000E+06
cmd_def_4: +1.00000000E+05
cmd_def_5: +1.00000000E+04
cmd_def_6: +1.00000000E+03
cmd_def_7: +1.00000000E+02
set_cmd: :FRES:RANG
group: Input config
state_quant: Auto-range (R-4w)
state_value_1: Off

