# Instrument driver configuration file.

[General settings]

# The name is shown in all the configuration windows
name: Stanford Lock-in Amplifier SR 86x

# The version string should be updated whenever changes are made to this config file
version: 1.0

# Name of folder containing the code defining a custom driver. Do not define this item
# or leave it blank for any standard driver based on the built-in VISA interface.
driver_path: SRS_SR86x


[Model and options]
# The option section allow instruments with different options to use the same driver

# Check instrument model id at startup (True or False). Default is False
check_model: True

# List of models supported by this driver
model_str_1: SR860
model_str_2: SR865
model_str_3: SR865A



# General VISA settings for the instrument.
[VISA settings]

# Enable or disable communication over the VISA protocol (True or False)
# If False, the driver will not perform any operations (unless there is a custom driver).
use_visa: True

# Reset the interface (not the instrument) at startup (True or False).  Default is False
# reset: True
reset: 

# Time (in seconds) before the timing out while waiting for an instrument response. Default is 5
timeout: 

# Default termination character
term_char: none


# Query instrument errors (True or False).  If True, every command sent to the device will
# be followed by an error query.  This is useful when testing new setups, but may degrade
# performance by slowing down the instrument communication. 
query_instr_errors: True 

# Bit mask for checking status event errors (default is 60, include all errors)
# The bits signal the following errors:
# 0: Operation
# 1: Request control
# 2: Query error
# 3: Device error
# 4: Execution error
# 5: Command error
# 6: User request
# 7: Power on 
error_bit_mask: 16
#error_bit_mask: 255 

# SCPI string to be used when querying for instrument error messages
error_cmd: 

# Initialization commands are sent to the instrument when starting the driver
# *RST will reset the device, *CLS clears the interface
init: LOCL 1

# Final commands sent to the instrument when closing the driver
final: LOCL 0


# Define quantities in sections. This list is a selection of allowed keywords,
# see the manual for a full list of options
#   datatype:      The datatype should be one of DOUBLE, BOOLEAN, COMBO,
#                  STRING, COMPLEX, VECTOR, VECTOR_COMPLEX, PATH or BUTTON.
#   unit:          Quantity unit
#   set_cmd:       Command used to send data to the instrument. Put <*> where the value should appear.
#   get_cmd:       Command used to get the data from the instrument. Default is set_cmd?
#   def_value:     Default value
#   low_lim:       Lowest allowable value.  Defaults to -INF
#   high_lim:      Highest allowable values.  Defaults to +INF
#   combo_def_1:   First option in a pull-down combo box. Only used when datatype=COMBO
#   combo_def_2:   Second option in a pull-down combo box. Only used when datatype=COMBO
#   ...
#   combo_def_n:   nth option in a pull-down combo box. Only used when datatype=COMBO
#   state_quant:   Quantity that determines this control's visibility
#   state_value_1: Value of "state_quant" for which the control is visible
#   state_value_2: Value of "state_quant" for which the control is visible
#   ...
#   state_value_n: Value of "state_quant" for which the control is visible
#   permission:    Sets read/writability, options are BOTH, READ, WRITE or NONE. Default is BOTH 
#   group:         Name of the group where the control belongs.
#   section:       Name of the section where the control belongs.


[Output amplitude]
datatype: DOUBLE
unit: V
def_value: 0.1
low_lim: 0.000001
set_cmd: SLVL
group: Reference and Phase
show_in_measurement_dlg: True

[Frequency]
datatype: DOUBLE
unit: Hz
def_value: 1000
set_cmd: FREQ
group: Reference and Phase
show_in_measurement_dlg: True

[Phase]
datatype: DOUBLE
unit: deg
def_value: 0.0
set_cmd: PHAS
group: Reference and Phase

[Detection harmonic]
datatype: DOUBLE
def_value: 1.0
set_cmd: HARM
group: Reference and Phase


[Input configuration]
datatype: COMBO
def_value: A
combo_def_1: A
combo_def_2: A-B
cmd_def_1: 0
cmd_def_2: 1
set_cmd: ISRC
group: Input and Filter
show_in_measurement_dlg: True

[Input coupling]
datatype: COMBO
def_value: AC
combo_def_1: AC
combo_def_2: DC
cmd_def_1: 0
cmd_def_2: 1
set_cmd: ICPL
group: Input and Filter

[Input grounding]
datatype: COMBO
def_value: Float
combo_def_1: Float
combo_def_2: Ground
cmd_def_1: 0
cmd_def_2: 1
set_cmd: IGND
group: Input and Filter


[Sensitivity]
datatype: COMBO
def_value: 1 V/uA
combo_def_1: 1 V/uA
combo_def_2: 500 mV/nA
combo_def_3: 200 mV/nA
combo_def_4: 100 mV/nA
combo_def_5: 50 mV/nA
combo_def_6: 20 mV/nA
combo_def_7: 10 mV/nA
combo_def_8: 5 mV/nA
combo_def_9: 2 mV/nA
combo_def_10: 1 mV/nA
combo_def_11: 500 uV/pA
combo_def_12: 200 uV/pA
combo_def_13: 100 uV/pA
combo_def_14: 50 uV/pA
combo_def_15: 20 uV/pA
combo_def_16: 10 uV/pA
combo_def_17: 5 uV/pA
combo_def_18: 2 uV/pA
combo_def_19: 1 uV/pA
combo_def_20: 500 nV/fA
combo_def_21: 200 nV/fA
combo_def_22: 100 nV/fA
combo_def_23: 50 nV/fA
combo_def_24: 20 nV/fA
combo_def_25: 10 nV/fA
combo_def_26: 5 nV/fA
combo_def_27: 2 nV/fA
combo_def_28: 1 nV/fA
cmd_def_1: 0
cmd_def_2: 1
cmd_def_3: 2
cmd_def_4: 3
cmd_def_5: 4
cmd_def_6: 5
cmd_def_7: 6
cmd_def_8: 7
cmd_def_9: 8
cmd_def_10: 9
cmd_def_11: 10
cmd_def_12: 11
cmd_def_13: 12
cmd_def_14: 13
cmd_def_15: 14
cmd_def_16: 15
cmd_def_17: 16
cmd_def_18: 17
cmd_def_19: 18
cmd_def_20: 19
cmd_def_21: 20
cmd_def_22: 21
cmd_def_23: 22
cmd_def_24: 23
cmd_def_25: 24
cmd_def_26: 25
cmd_def_27: 26
cmd_def_28: 27
set_cmd: SCAL
group: Gain and Time Constant
show_in_measurement_dlg: True

[Time constant]
datatype: COMBO
def_value: 100 ms
combo_def_1: 1 us
combo_def_2: 3 us
combo_def_3: 10 us
combo_def_4: 30 us
combo_def_5: 100 us
combo_def_6: 300 us
combo_def_7: 1 ms
combo_def_8: 3 ms
combo_def_9: 10 ms
combo_def_10: 30 ms
combo_def_11: 100 ms
combo_def_12: 300 ms
combo_def_13: 1 s
combo_def_14: 3 s
combo_def_15: 10 s
combo_def_16: 30 s
combo_def_17: 100 s
combo_def_18: 300 s
combo_def_19: 1 ks
combo_def_20: 3 ks
combo_def_21: 10 ks
combo_def_22: 30 ks
cmd_def_1: 0
cmd_def_2: 1
cmd_def_3: 2
cmd_def_4: 3
cmd_def_5: 4
cmd_def_6: 5
cmd_def_7: 6
cmd_def_8: 7
cmd_def_9: 8
cmd_def_10: 9
cmd_def_11: 10
cmd_def_12: 11
cmd_def_13: 12
cmd_def_14: 13
cmd_def_15: 14
cmd_def_16: 15
cmd_def_17: 16
cmd_def_18: 17
cmd_def_19: 18
cmd_def_20: 19
cmd_def_21: 20
cmd_def_22: 21
set_cmd: OFLT
group: Gain and Time Constant
show_in_measurement_dlg: True

[Filter slope]
datatype: COMBO
def_value: 12 dB/oct
combo_def_1: 6 dB/oct
combo_def_2: 12 dB/oct
combo_def_3: 18 dB/oct
combo_def_4: 24 dB/oct
cmd_def_1: 0
cmd_def_2: 1
cmd_def_3: 2
cmd_def_4: 3
set_cmd: OFSL
group: Gain and Time Constant

[Synchronous filter]
datatype: BOOLEAN
def_value: False
set_cmd: SYNC
group: Gain and Time Constant
#inputs 1 ->4 now correspond to integer value = 0 -> 3
#86x requires a space between ? and integer value
[Aux 1 output]
datatype: DOUBLE
unit: V
def_value: 0.0
set_cmd: AUXV 0,<*>
get_cmd: AUXV? 0 
group: Aux output
section: Aux ports

[Aux 2 output]
datatype: DOUBLE
unit: V
def_value: 0.0
set_cmd: AUXV 1,<*>
get_cmd: AUXV? 1
group: Aux output
section: Aux ports

[Aux 3 output]
datatype: DOUBLE
unit: V
def_value: 0.0
set_cmd: AUXV 2,<*>
get_cmd: AUXV? 2
group: Aux output
section: Aux ports

[Aux 4 output]
datatype: DOUBLE
unit: V
def_value: 0.0
set_cmd: AUXV 3,<*>
get_cmd: AUXV? 3
group: Aux output
section: Aux ports

# inputs 1 ->4 now correspond to integer value = 0 -> 3
# 86x requires a space between ? and integer value
[Aux 1 input]
datatype: DOUBLE
unit: V
permission: READ
get_cmd: OAUX? 0 
group: Aux input
section: Aux ports

[Aux 2 input]
datatype: DOUBLE
unit: V
permission: READ
get_cmd: OAUX? 1 
group: Aux input
section: Aux ports

[Aux 3 input]
datatype: DOUBLE
unit: V
permission: READ
get_cmd: OAUX? 2
group: Aux input
section: Aux ports

[Aux 4 input]
datatype: DOUBLE
unit: V
permission: READ
get_cmd: OAUX? 3
group: Aux input
section: Aux ports


[Value]
datatype: COMPLEX
unit: V
permission: READ
get_cmd: SNAP? 0,1
group: Data
section: Data
show_in_measurement_dlg: True

[X]
datatype: DOUBLE
unit: V
permission: READ
get_cmd: OUTP? 0
group: Data
section: Data

[Y]
datatype: DOUBLE
unit: V
permission: READ
get_cmd: OUTP? 1
group: Data
section: Data

[R]
datatype: DOUBLE
unit: V
permission: READ
get_cmd: OUTP? 2
group: Data
section: Data

[theta]
datatype: DOUBLE
unit: deg
permission: READ
get_cmd: OUTP? 3
group: Data
section: Data
