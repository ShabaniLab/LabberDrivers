# Instrument driver configuration file.

[General settings]

# The name is shown in all the configuration windows
name: VICurveTracer

# The version string should be updated whenever changes are made to this config file
version: 0.0

# Name of folder containing the code defining a custom driver. Do not define this item
# or leave it blank for any standard driver based on the built-in VISA interface.
driver_path: VICurveTracer


[Model and options]
# The option section allow instruments with different options to use the same driver
check_option: false

# Check instrument model id at startup (True or False). Default is False
check_model: False

# General VISA settings for the instrument.
[VISA settings]

# Enable or disable communication over the VISA protocol (True or False)
# If False, the driver will not perform any operations (unless there is a custom driver).
use_visa = False

# Define quantities in sections. The section name should be the same as the "name" value
# The following keywords are allowed:
#   name:          Quantity name
#   unit:          Quantity unit
#   enabled:	   Determines wether the control is enabled from start.  Default is True
#   datatype:      The data type should be one of DOUBLE, BOOLEAN, COMBO or STRING
#   def_value:     Default value
#   low_lim:       Lowest allowable value.  Defaults to -INF
#   high_lim:      Highest allowable values.  Defaults to +INF
#   combo_def_1:   First option in a pull-down combo box. Only used when datatype=COMBO
#   combo_def_2:   Second option in a pull-down combo box. Only used when datatype=COMBO
#   ...
#   combo_def_n:   nth option in a pull-down combo box. Only used when datatype=COMBO
#   group:         Name of the group where the control belongs.
#   state_quant:   Quantity that determines this control's visibility
#   state_value_1: Value of "state_quant" for which the control is visible
#   state_value_2: Value of "state_quant" for which the control is visible
#   ...
#   state_value_n: Value of "state_quant" for which the control is visible
#   permission:    Sets read/writability, options are BOTH, READ, WRITE or NONE. Default is BOTH
#   set_cmd:       Command used to send data to the instrument. Put <*> where the value should appear.
#   get_cmd:       Command used to get the data from the instrument. Default is set_cmd?
#   sweep_cmd:     Command used to sweep data. Use <sr> for sweep rate, <st> for sweep time, and <*> for the value.
#   sweep_res:     Attainable resolution when sweeping an instrument
#   stop_cmd:      Command used to stop a sweep

# =============================================================================
# --- Instrument parameters ---------------------------------------------------
# =============================================================================

[Source: Model]
datatype: COMBO
# Combo value NAME should match one of the file found in this folder.
combo_def_1: YokogawaGS200
combo_def_2: Keithley2450
group: Instruments

[Source: VISA address]
datatype: STRING
def_value:
group: Instruments

[DMM: Model]
datatype: COMBO
# Combo value NAME should match one of the file found in this folder.
combo_def_1: Keithley6500
combo_def_2: Keithley2000
group: Instruments

[DMM: VISA address]
datatype: STRING
def_value:
group: Instruments

[Lock-In: Model]
datatype: COMBO
# Combo value NAME should match one of the file found in this folder.
combo_def_1: SRS860
group: Instruments

[Lock-In: VISA address]
datatype: STRING
def_value:
group: Instruments


# =============================================================================
# --- Parameters --------------------------------------------------------------
# =============================================================================

[Acquisition mode]
datatype: COMBO
combo_def_1: Continuous
combo_def_2: Point by point (without Lock-in)
combo_def_3: Point by point (with Lock-in)
tooltip: When running with the Lock-in the averaging time on the DMM is set based on the Lock in time constant.

[Source: extrema]
datatype: DOUBLE
unit: V
def_value: 1

[Source: reset rate]
datatype: DOUBLE
unit: V/s
def_value: 10

[Source: load resistance]
datatype: DOUBLE
unit: Ohm
def_value: 1e6

[DMM: list ranges]
datatype: STRING
permission: READ

[DMM: range]
datatype: DOUBLE
unit: V

[DMM: number of points]
datatype: DOUBLE
low_lim: 3
def_value: 201

[DMM: list acquisition rates]
datatype: STRING
permission: READ
state_quant: Acquisition mode
state_value_1: Continuous

[DMM: acquisition rate]
datatype: DOUBLE
unit: points/s
state_quant: Acquisition mode
state_value_1: Continuous

[DMM: averaging time]
datatype: DOUBLE
unit: s
state_quant: Acquisition mode
state_value_1: Point by point (without Lock-in)
tooltip: The closest value in term of the Power line cycle is used (the PLC is assumed to be 60 Hz)

[Lock-in: amplitude]
datatype: DOUBLE
unit: V
def_value: 10e-3
state_quant: Acquisition mode
state_value_1: Point by point (with Lock-in)

[Lock-in: frequency]
datatype: DOUBLE
unit: Hz
def_value: 217.7777
state_quant: Acquisition mode
state_value_1: Point by point (with Lock-in)

[Lock-in: list time constants]
datatype: STRING
permission: READ
state_quant: Acquisition mode
state_value_1: Point by point (with Lock-in)

[Lock-in: time constant]
datatype: DOUBLE
unit: s
def_value: 100e-3
state_quant: Acquisition mode
state_value_1: Point by point (with Lock-in)

[Lock-in: settling time]
datatype: DOUBLE
unit: Tc
def_value: 3
state_quant: Acquisition mode
state_value_1: Point by point (with Lock-in)

[Lock-in: load resistance]
datatype: DOUBLE
unit: Ohm
def_value: 1e6
state_quant: Acquisition mode
state_value_1: Point by point (with Lock-in)

[VI curve]
x_name: Bias current
x_unit: A
datatype: VECTOR
permission: READ

[dR vs I curve]
x_name: Bias current
x_unit: A
datatype: VECTOR_COMPLEX
permission: READ
state_quant: Acquisition mode
state_value_1: Point by point (with Lock-in)
tooltip: The VI Curve should be acquired first !