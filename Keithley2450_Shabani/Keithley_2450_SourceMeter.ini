# Instrument driver configuration file.

[General settings]

# The name is shown in all the configuration windows
name: Keithley 2450 SourceMeter [Shabani]

# The version string should be updated whenever changes are made to this config file
version: 1.1

# Name of folder containing the code defining a custom driver. Do not define this item
# or leave it blank for any standard driver based on the built-in VISA interface.
driver_path:



[Model and options]
# The option section allow instruments with different options to use the same driver

# Check instrument model id at startup (True or False). Default is False
check_model: True

# List of models supported by this driver
model_str_1: 2400
model_str_2: 2450

# Valid model strings returned by the instrument. Default value = model_str
model_id_1: MODEL 24



# General VISA settings for the instrument.
[VISA settings]

# Enable or disable communication over the VISA protocol (True or False)
# If False, the driver will not perform any operations (unless there is a custom driver).
use_visa = True

# Reset the interface (not the instrument) at startup (True or False).  Default is False
reset: True

# Time (in seconds) before the timing out while waiting for an instrument response. Default is 5
timeout: 2

# Query instrument errors (True or False).  If True, every command sent to the device will
# be followed by an error query.  This is useful when testing new setups, but may degrade
# performance by slowing down the instrument communication.
query_instr_errors: True

# Bit mask for checking status byte errors (default is 255, include all errors)
# The bits signal the following errors:
# 0: Operation
# 1: Request control
# 2: Query error
# 3: Device error
# 4: Execution error
# 5: Command error
# 6: User request
# 7: Power on
error_bit_mask: 255

# SCPI string to be used when querying for instrument error messages
error_cmd: :SYST:ERR?

# Initialization commands are sent to the instrument when starting the driver
# *RST will reset the device, *CLS clears the interface
init: *CLS

# Final commands sent to the instrument when closing the driver
final:


# Define quantities in sections. This list is a selection of allowed keywords,
# see the manual for a full list of options
#   datatype:      The datatype should be one of DOUBLE, BOOLEAN, COMBO,
#                  STRING, COMPLEX, VECTOR, VECTOR_COMPLEX, PATH or BUTTON.
#   unit:          Quantity unit
#   set_cmd:       Command used to send data to the instrument. Put <*> where the value should appear.
#   get_cmd:       Command used to get the data from the instrument. Default is set_cmd?
#   def_value:     Default value
#   low_lim:       Lowest allowable value.  Defaults to -INF
#   high_lim:      Highest allowable values.  Defaults to +INF
#   combo_def_1:   First option in a pull-down combo box. Only used when datatype=COMBO
#   combo_def_2:   Second option in a pull-down combo box. Only used when datatype=COMBO
#   ...
#   combo_def_n:   nth option in a pull-down combo box. Only used when datatype=COMBO
#   state_quant:   Quantity that determines this control's visibility
#   state_value_1: Value of "state_quant" for which the control is visible
#   state_value_2: Value of "state_quant" for which the control is visible
#   ...
#   state_value_n: Value of "state_quant" for which the control is visible
#   permission:    Sets read/writability, options are BOTH, READ, WRITE or NONE. Default is BOTH
#   group:         Name of the group where the control belongs.
#   section:       Name of the section where the control belongs.



[Source type]
datatype: COMBO
def_value: Voltage
combo_def_1: Voltage
combo_def_2: Current
cmd_def_1: VOLT
cmd_def_2: CURR
set_cmd: :SOUR:FUNC
group: Source

[Current limit]
datatype: DOUBLE
unit: A
set_cmd: :SOUR:VOLT:ILIM
low_lim: 1e-9
high_lim: 1.05
state_quant: Source type
state_value: Voltage
group: Source

[Voltage limit]
datatype: DOUBLE
unit: V
set_cmd: :SOUR:CURR:VLIM
low_lim: 0.02
high_lim: 210
state_quant: Source type
state_value: Current
group: Source

[Source voltage auto-range]
datatype: BOOLEAN
def_value: True
set_cmd: :SOUR:VOLT:RANG:AUTO
state_quant: Source type
state_value: Voltage
group: Source

[Source voltage range]
datatype: DOUBLE
unit: V
def_value: 20
set_cmd: :SOUR:VOLT:RANG
state_quant: Source voltage auto-range
state_value: 0
group: Source

[Source voltage]
datatype: DOUBLE
unit: V
def_value: 1
set_cmd: :SOUR:VOLT
sweep_cmd: ***REPEAT SET***
state_quant: Source type
state_value: Voltage
group: Source

[Source current auto-range]
datatype: BOOLEAN
def_value: True
set_cmd: :SOUR:CURR:RANG:AUTO
state_quant: Source type
state_value: Current
group: Source

[Source current range]
datatype: DOUBLE
unit: A
def_value: 1E-3
set_cmd: :SOUR:CURR:RANG
state_quant: Source current auto-range
state_value: 0
group: Source

[Source current]
datatype: DOUBLE
unit: A
def_value: 1E-3
set_cmd: :SOUR:CURR
sweep_cmd: ***REPEAT SET***
state_quant: Source type
state_value: Current
group: Source

[Output]
datatype: BOOLEAN
def_value: False
set_cmd: :OUTPut
group: Output

[Measurement type]
datatype: COMBO
def_value: Current
combo_def_1: Voltage
combo_def_2: Current
combo_def_3: Resistance
cmd_def_1: "VOLT:DC"
cmd_def_2: "CURR:DC"
cmd_def_3: "RES"
set_cmd: :SENS:FUNC
group: Measure

[Voltage auto-range]
datatype: BOOLEAN
def_value: True
set_cmd: :SENS:VOLT:RANG:AUTO
state_quant: Measurement type
state_value: Voltage
group: Measure

[Voltage range]
datatype: DOUBLE
unit: V
def_value: 20
set_cmd: :SENS:VOLT:RANG
state_quant: Voltage auto-range
state_value: 0
group: Measure

[Voltage NPLC]
datatype: DOUBLE
def_value: 1
low_lim: 0.01
high_lim: 10
set_cmd: :SENS:VOLT:NPLC
state_quant: Measurement type
state_value: Voltage
group: Measure

[Voltage]
datatype: DOUBLE
unit: V
permission: READ
get_cmd: :READ?
state_quant: Measurement type
state_value: Voltage
group: Measure

[Current auto-range]
datatype: BOOLEAN
def_value: True
set_cmd: :SENS:CURR:RANG:AUTO
state_quant: Measurement type
state_value: Current
group: Measure

[Current range]
datatype: DOUBLE
unit: A
def_value: 1E-4
set_cmd: :SENS:CURR:RANG
state_quant: Current auto-range
state_value: 0
group: Measure

[Current NPLC]
datatype: DOUBLE
def_value: 1
low_lim: 0.01
high_lim: 10
set_cmd: :SENS:CURR:NPLC
state_quant: Measurement type
state_value: Current
group: Measure

[Current]
datatype: DOUBLE
unit: A
permission: READ
get_cmd: :READ?
state_quant: Measurement type
state_value: Current
group: Measure

[Resistance auto-range]
datatype: BOOLEAN
def_value: True
set_cmd: :SENS:RES:RANG:AUTO
state_quant: Measurement type
state_value: Resistance
group: Measure

[Resistance range]
datatype: DOUBLE
unit: Ohm
def_value: 2E5
set_cmd: :SENS:RES:RANG
state_quant: Resistance auto-range
state_value: 0
group: Measure

[Integration time (R)]
datatype: COMBO
def_value: 20 ms
combo_def_1: 200 ms
combo_def_2: 20 ms
combo_def_3: 2 ms
combo_def_4: 0.2 ms
cmd_def_1: +1.00000000E+01
cmd_def_2: +1.00000000E+00
cmd_def_3: +1.00000000E-01
cmd_def_4: +1.00000000E-02
set_cmd: :SENS:RES:NPLC
state_quant: Measurement type
state_value: Resistance
group: Measure

[Resistance]
datatype: DOUBLE
unit: Ohm
permission: READ
get_cmd: :FORM:ELEM RES;:READ?
state_quant: Measurement type
state_value: Resistance
group: Measure
