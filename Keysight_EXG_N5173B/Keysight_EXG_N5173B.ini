# Instrument driver configuration file.

[General settings]

# The name is shown in all the configuration windows
name: Keysight EXG N5173B

# The version string should be updated whenever changes are made to this config file
version: 0.0

# Name of folder containing the code defining a custom driver. Do not define this item
# or leave it blank for any standard driver based on the built-in VISA interface.
driver_path:



[Model and options]
# The option section allow instruments with different options to use the same driver

# List of models supported by this driver
model_str_1: N5173B

# Check instrument model id at startup (True or False). Default is False
check_model: True

# Valid model strings returned by the instrument. Default value = model_str
# model_id_1:

# Installed options (shown as checkbox controls)
option_str_1: AM, FM, Phase modulation
option_str_2: Pulse modulation
option_str_3: Narrow pulse modulation
option_str_4: Ultra-low phase noise
option_str_5: Enhanced ultra-low phase noise
option_str_6: Wideband I/Q modulation, differential inputs
option_str_7: Wideband I/Q modulation, single-ended inputs
option_str_8: Wideband modulation below 3.2 GHz
option_str_9: High-performance pulse modulation

# Check instrument options at startup (True or False). Default is False
check_options: True

# If check_options is set to True, define command for getting options
option_cmd: :DIAG:INFO:OPT?

# If check_options is set to True, supply valid id option strings for each option
option_id_1: UNT
option_id_2: UNU
option_id_3: UNW
option_id_4: UNX
option_id_5: UNY
option_id_6: 016
option_id_7: 015
option_id_8: H18
option_id_9: 1E6



# General VISA settings for the instrument.
[VISA settings]

# Enable or disable communication over the VISA protocol (True or False)
# If False, the driver will not perform any operations (unless there is a custom driver).
use_visa = True

# Reset the interface (not the instrument) at startup (True or False).  Default is False
reset: False

# Time (in seconds) before the timing out while waiting for an instrument response. Default is 5
timeout: 2

# Query instrument errors (True or False).  If True, every command sent to the device will
# be followed by an error query.  This is useful when testing new setups, but may degrade
# performance by slowing down the instrument communication. 
query_instr_errors: False 

# Bit mask for checking status byte errors (default is 255, include all errors)
# The bits signal the following errors:
# 0: Operation
# 1: Request control
# 2: Query error
# 3: Device error
# 4: Execution error
# 5: Command error
# 6: User request
# 7: Power on
error_bit_mask: 255

# SCPI string to be used when querying for instrument error messages
error_cmd: :SYST:ERR?

# Initialization commands are sent to the instrument when starting the driver
# *RST will reset the device, *CLS clears the interface
init: :SYST:ERR:SCPI ON;

# Final commands sent to the instrument when closing the driver
final: 


# Define quantities in sections. This list is a selection of allowed keywords,
# see the manual for a full list of options
#   datatype:      The datatype should be one of DOUBLE, BOOLEAN, COMBO,
#                  STRING, COMPLEX, VECTOR, VECTOR_COMPLEX, PATH or BUTTON.
#   unit:          Quantity unit
#   set_cmd:       Command used to send data to the instrument. Put <*> where the value should appear.
#   get_cmd:       Command used to get the data from the instrument. Default is set_cmd?
#   def_value:     Default value
#   low_lim:       Lowest allowable value.  Defaults to -INF
#   high_lim:      Highest allowable values.  Defaults to +INF
#   combo_def_1:   First option in a pull-down combo box. Only used when datatype=COMBO
#   combo_def_2:   Second option in a pull-down combo box. Only used when datatype=COMBO
#   ...
#   combo_def_n:   nth option in a pull-down combo box. Only used when datatype=COMBO
#   state_quant:   Quantity that determines this control's visibility
#   state_value_1: Value of "state_quant" for which the control is visible
#   state_value_2: Value of "state_quant" for which the control is visible
#   ...
#   state_value_n: Value of "state_quant" for which the control is visible
#   permission:    Sets read/writability, options are BOTH, READ, WRITE or NONE. Default is BOTH 
#   group:         Name of the group where the control belongs.
#   section:       Name of the section where the control belongs.


[Frequency]
unit: Hz
datatype: DOUBLE
def_value: 5.0E9
set_cmd: :SOUR:FREQ

[Output unit]
datatype: COMBO
def_value: Power [dBm]
combo_def_1: Power [dBm]
combo_def_2: Voltage [V]
cmd_def_1: DBM
cmd_def_2: V
set_cmd: :UNIT:POW

[Power]
unit: dBm
datatype: DOUBLE
def_value: -120
set_cmd: :SOUR:POW:IMM:AMPL <*>DBM
get_cmd: :SOUR:POW:IMM:AMPL?
state_quant: Output unit
state_value_1: Power [dBm]

[Voltage]
unit: V
datatype: DOUBLE
def_value: 1E-6
set_cmd: :SOUR:POW:IMM:AMPL <*>V
get_cmd: :SOUR:POW:IMM:AMPL?
state_quant: Output unit
state_value_1: Voltage [V]

[Automatic levelling control (ALC)]
datatype: BOOLEAN
def_value: True
set_cmd: :POW:ALC

[Phase]
unit: rad
datatype: DOUBLE
def_value: 0
set_cmd: :SOUR:PHAS:ADJ <*>RAD
get_cmd: :SOUR:PHAS:ADJ?

[Output]
datatype: BOOLEAN
def_value: False
set_cmd: :OUTP

[Modulation]
datatype: BOOLEAN
def_value: False
set_cmd: :OUTP:MOD
option_value_1: Pulse modulation
option_value_2: Narrow pulse modulation
option_value_3: AM, FM, Phase modulation
option_value_4: Wideband I/Q modulation, differential inputs
option_value_5: Wideband I/Q modulation, single-ended inputs
option_value_6: High-performance pulse modulation

[Pulse modulation]
datatype: COMBO
def_value: Off
combo_def_1: Off
combo_def_2: On
cmd_def_1: 0
cmd_def_2: 1
set_cmd: :PULM:STAT
option_value_1: Pulse modulation
option_value_2: Narrow pulse modulation
option_value_3: High-performance pulse modulation
group: Modulation
#section: Modulation

[Pulse modulation source]
datatype: COMBO
def_value: Internal
combo_def_1: Internal
combo_def_2: External
cmd_def_1: INT
cmd_def_2: EXT
state_quant: Pulse modulation
state_value_1: On
group: Modulation
set_cmd: :PULM:SOUR
#section: Modulation

[Int. pulse modulation]
datatype: COMBO
def_value: Int. triggered
combo_def_1: Int. square
combo_def_2: Int. free run
combo_def_3: Int. triggered
combo_def_4: Int. doublet
combo_def_5: Int. gated
cmd_def_1: SQU
cmd_def_2: FRUN
cmd_def_3: TRIG
cmd_def_4: DOUB
cmd_def_5: GATE
group: Modulation
state_quant: Pulse modulation source
state_value_1: Internal
set_cmd: :PULM:SOUR:INT
#section: Modulation

[Pulse delay]
unit: s
datatype: DOUBLE
def_value: 100E-9
group:  Modulation 
state_quant: Int. pulse modulation
state_value_1: Int. triggered
state_value_2: Int. free run
state_value_3: Int. gated
set_cmd: :PULM:INT:DEL
#section: Modulation

[Pulse width]
unit: s
datatype: DOUBLE
def_value: 500E-9
group: Modulation
state_quant: Int. pulse modulation
state_value_1: Int. triggered
state_value_2: Int. free run
state_value_3: Int. gated
set_cmd: :PULM:INT:PWID
#section: Modulation

[Pulse period]
unit: s
datatype: DOUBLE
def_value: 1E-3
group:  Modulation 
state_quant: Int. pulse modulation
state_value_1: Int. free run
state_value_2: Int. gated
set_cmd: :PULM:INT:PER
#section: Modulation

[Pulse polarity]
datatype: COMBO
def_value: Normal
combo_def_1: Normal
combo_def_2: Inverted
cmd_def_1: NORM
cmd_def_2: INV
state_quant: Pulse modulation source
state_value_1: External
group: Modulation 
set_cmd: :PULM:EXT:POL
#section: Modulation

[I/Q modulation]
datatype: COMBO
def_value: Off
combo_def_1: Off
combo_def_2: On
cmd_def_1: 0
cmd_def_2: 1
set_cmd: :WDM:STAT
option_value_1: Wideband I/Q modulation, differential inputs
option_value_2: Wideband I/Q modulation, single-ended inputs
group: I/Q Mixer
#section: Modulation

[I/Q Adjustments]
datatype: BOOLEAN
def_value: True
state_quant: I/Q modulation
state_value_1: On
set_cmd: :WDM:IQAD
group: I/Q Mixer
#section: Modulation

[I offset]
unit: V
datatype: DOUBLE
def_value: 0E-3
state_quant: I/Q Adjustments
state_value_1: On
set_cmd: :WDM:IQAD:IOFF
group: I/Q Mixer
#section: Modulation

[Q offset]
unit: V
datatype: DOUBLE
def_value: 0E-3
state_quant: I/Q Adjustments
state_value_1: On
set_cmd: :WDM:IQAD:QOFF
group: I/Q Mixer
#section: Modulation
