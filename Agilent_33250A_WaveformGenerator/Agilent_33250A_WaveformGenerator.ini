# Instrument driver configuration file.

[General settings]

# The name is shown in all the configuration windows
name: Agilent 33250A Waveform Generator

# The version string should be updated whenever changes are made to this config file
version: 1.0

# Name of folder containing the code defining a custom driver. Do not define this item
# or leave it blank for any standard driver based on the built-in VISA interface.
driver_path: Agilent_33250A_WaveformGenerator


[Model and options]
# The option section allow instruments with different options to use the same driver

# Check instrument model id at startup (True or False). Default is False
check_model: True

# List of models supported by this driver
model_str_1: 33250A


# General VISA settings for the instrument.
[VISA settings]

# Enable or disable communication over the VISA protocol (True or False)
# If False, the driver will not perform any operations (unless there is a custom driver).
use_visa: True

# Reset the interface (not the instrument) at startup (True or False).  Default is False
reset: True

# Time (in seconds) before the timing out while waiting for an instrument response. Default is 5
timeout: 2

# Query instrument errors (True or False).  If True, every command sent to the device will
# be followed by an error query.  This is useful when testing new setups, but may degrade
# performance by slowing down the instrument communication. 
query_instr_errors: False 

# Bit mask for checking status byte errors (default is 255, include all errors)
# The bits signal the following errors:
# 0: Operation
# 1: Request control
# 2: Query error
# 3: Device error
# 4: Execution error
# 5: Command error
# 6: User request
# 7: Power on
error_bit_mask: 255

# SCPI string to be used when querying for instrument error messages
error_cmd: :SYST:ERR?

# Initialization commands are sent to the instrument when starting the driver
# *RST will reset the device, *CLS clears the interface
init: *ESE 60;:SOUR:VOLT:UNIT VPP;:FORM:BORD SWAP;

# Final commands sent to the instrument when closing the driver
final: 


# Define quantities in sections. This list is a selection of allowed keywords,
# see the manual for a full list of options
#   datatype:      The datatype should be one of DOUBLE, BOOLEAN, COMBO,
#                  STRING, COMPLEX, VECTOR, VECTOR_COMPLEX, PATH or BUTTON.
#   unit:          Quantity unit
#   set_cmd:       Command used to send data to the instrument. Put <*> where the value should appear.
#   get_cmd:       Command used to get the data from the instrument. Default is set_cmd?
#   def_value:     Default value
#   low_lim:       Lowest allowable value.  Defaults to -INF
#   high_lim:      Highest allowable values.  Defaults to +INF
#   combo_def_1:   First option in a pull-down combo box. Only used when datatype=COMBO
#   combo_def_2:   Second option in a pull-down combo box. Only used when datatype=COMBO
#   ...
#   combo_def_n:   nth option in a pull-down combo box. Only used when datatype=COMBO
#   state_quant:   Quantity that determines this control's visibility
#   state_value_1: Value of "state_quant" for which the control is visible
#   state_value_2: Value of "state_quant" for which the control is visible
#   ...
#   state_value_n: Value of "state_quant" for which the control is visible
#   permission:    Sets read/writability, options are BOTH, READ, WRITE or NONE. Default is BOTH 
#   group:         Name of the group where the control belongs.
#   section:       Name of the section where the control belongs.


[Function]
datatype: COMBO
def_value: Sinusoid
combo_def_1: Sinusoid
combo_def_2: Square
combo_def_3: Ramp
combo_def_4: Pulse
combo_def_5: Noise
combo_def_6: DC
combo_def_7: User
cmd_def_1: SIN
cmd_def_2: SQU
cmd_def_3: RAMP
cmd_def_4: PULS
cmd_def_5: NOIS
cmd_def_6: DC
cmd_def_7: USER
set_cmd: :FUNC

[Frequency]
datatype: DOUBLE
def_value: 1E3
unit: Hz
set_cmd: :FREQ

[Voltage]
datatype: DOUBLE
def_value: 0.1
unit: V
set_cmd: :VOLT

[Offset]
datatype: DOUBLE
def_value: 0.0
unit: V
set_cmd: :VOLT:OFFS

[Duty cycle]
datatype: DOUBLE
def_value: 50
unit: %
set_cmd: :FUNC:SQU:DCYCL
state_quant: Function
state_value_1: Square

[Ramp symmetry]
datatype: DOUBLE
def_value: 50
unit: %
set_cmd: :FUNC:RAMP:SYMM
state_quant: Function
state_value_1: Ramp

[Pulse period]
datatype: DOUBLE
def_value: 1E-3
unit: s
set_cmd: :PULS:PER
state_quant: Function
state_value_1: Pulse

[Pulse width]
datatype: DOUBLE
def_value: 1E-4
unit: s
set_cmd: :PULS:WIDT
state_quant: Function
state_value_1: Pulse

[Pulse transition]
datatype: DOUBLE
def_value: 5E-9
unit: s
set_cmd: :PULS:TRAN
state_quant: Function
state_value_1: Pulse

[Output enabled]
datatype: BOOLEAN
def_value: 1
set_cmd: :OUTP
group: Output

[Output load]
datatype: COMBO
def_value: 50 Ohm
combo_def_1: 50 Ohm
combo_def_2: 10 kOhm
cmd_def_1: +5.0000000000000E+01
cmd_def_2: +1.0000000000000E+04
set_cmd: :OUTP:LOAD
group: Output

[Output polarity]
datatype: COMBO
def_value: Normal
combo_def_1: Normal
combo_def_2: Inverted
cmd_def_1: NORM
cmd_def_2: INV
set_cmd: :OUTP:POL
group: Output
[Output sync]
datatype: BOOLEAN
def_value: 1
set_cmd: :OUTP:SYNC
group: Output

[Arb. Waveform]
datatype: VECTOR
permission: WRITE
unit: V
x_name: Time
x_unit: s


[Burst - Enabled]
datatype: BOOLEAN
def_value: 0
set_cmd: BURS:STAT
group: Burst mode
section: Modulation
[Burst - Phase]
datatype: DOUBLE
def_value: 0.0
unit: deg
set_cmd: UNIT:ANGLE DEG;:BURS:PHAS
state_quant: Burst - Enabled
state_value_1: 1
group: Burst mode
section: Modulation
[Burst - Mode]
datatype: COMBO
def_value: Triggered
combo_def_1: Triggered
combo_def_2: Gated
cmd_def_1: TRIG
cmd_def_2: GAT
set_cmd: :BURS:MODE
state_quant: Burst - Enabled
state_value_1: 1
group: Burst mode
section: Modulation
[Burst - Gate polarity]
datatype: COMBO
def_value: Normal
combo_def_1: Normal
combo_def_2: Inverted
cmd_def_1: NORM
cmd_def_2: INV
set_cmd: :BURS:GATE:POL
state_quant: Burst - Mode
state_value_1: Gated
group: Burst mode
section: Modulation
[Burst - # of cycles]
datatype: DOUBLE
def_value: 0.0
set_cmd: :BURS:NCYC
state_quant: Burst - Mode
state_value_1: Triggered
group: Burst mode
section: Modulation
[Trig source]
datatype: COMBO
def_value: Internal
combo_def_1: Internal
combo_def_2: External
combo_def_3: Manual
cmd_def_1: IMM
cmd_def_2: EXT
cmd_def_3: BUS
set_cmd: :TRIG:SOUR
state_quant: Burst - Mode
state_value_1: Triggered
group: Burst mode
section: Modulation
[Trig slope]
datatype: COMBO
def_value: Positive
combo_def_1: Positive
combo_def_2: Negative
cmd_def_1: POS
cmd_def_2: NEG
set_cmd: :TRIG:SLOP
state_quant: Trig source
state_value_1: External
group: Burst mode
section: Modulation
[Trig interval]
datatype: DOUBLE
def_value: 0.0
unit: s
set_cmd: :BURS:INT:PER
state_quant: Trig source
state_value_1: Internal
group: Burst mode
section: Modulation
[Trig delay]
datatype: DOUBLE
def_value: 0.0
unit: s
set_cmd: :TRIG:DELAY
state_quant: Burst - Mode
state_value_1: Triggered
group: Burst mode
section: Modulation
[Output trigger]
datatype: BOOLEAN
def_value: 0
set_cmd: :OUTP:TRIG
state_quant: Trig source
state_value_1: Internal
group: Burst mode
section: Modulation
[Output trig slope]
datatype: COMBO
def_value: Positive
combo_def_1: Positive
combo_def_2: Negative
cmd_def_1: POS
cmd_def_2: NEG
set_cmd: :OUTP:TRIG:SLOP
state_quant: Output trigger
state_value_1: 1
group: Burst mode
section: Modulation

[AM - Enabled]
datatype: BOOLEAN
def_value: 0
set_cmd: AM:STAT
group: AM
section: Modulation
[AM - Depth]
datatype: DOUBLE
def_value: 100
unit: %
set_cmd: AM:DEPT
state_quant: AM - Enabled
state_value_1: 1
group: AM
section: Modulation
[AM - Source]
datatype: COMBO
def_value: Internal
combo_def_1: Internal
combo_def_2: External
cmd_def_1: INT
cmd_def_2: EXT
set_cmd: AM:SOUR
state_quant: AM - Enabled
state_value_1: 1
group: AM
section: Modulation
[AM - Internal]
datatype: COMBO
def_value: Sinusoid
combo_def_1: Sinusoid
combo_def_2: Square
combo_def_3: Ramp
combo_def_4: NRamp
combo_def_5: Triangle
combo_def_6: Noise
combo_def_7: User
cmd_def_1: SIN
cmd_def_2: SQU
cmd_def_3: RAMP
cmd_def_4: NRAM
cmd_def_5: TRI
cmd_def_6: NOIS
cmd_def_7: USER
set_cmd: AM:INT:FUNC
state_quant: AM - Source
state_value_1: Internal
group: AM
section: Modulation
[AM - Frequency]
datatype: DOUBLE
def_value: 1E2
unit: Hz
set_cmd: AM:INT:FREQ
state_quant: AM - Source
state_value_1: Internal
group: AM
section: Modulation

[FM - Enabled]
datatype: BOOLEAN
def_value: 0
set_cmd: FM:STAT
group: FM
section: Modulation
[FM - Deviation]
datatype: DOUBLE
def_value: 100
unit: Hz
set_cmd: FM:DEV
state_quant: FM - Enabled
state_value_1: 1
group: FM
section: Modulation
[FM - Source]
datatype: COMBO
def_value: Internal
combo_def_1: Internal
combo_def_2: External
cmd_def_1: INT
cmd_def_2: EXT
set_cmd: FM:SOUR
state_quant: FM - Enabled
state_value_1: 1
group: FM
section: Modulation
[FM - Internal]
datatype: COMBO
def_value: Sinusoid
combo_def_1: Sinusoid
combo_def_2: Square
combo_def_3: Ramp
combo_def_4: NRamp
combo_def_5: Triangle
combo_def_6: Noise
combo_def_7: User
cmd_def_1: SIN
cmd_def_2: SQU
cmd_def_3: RAMP
cmd_def_4: NRAM
cmd_def_5: TRI
cmd_def_6: NOIS
cmd_def_7: USER
set_cmd: FM:INT:FUNC
state_quant: FM - Source
state_value_1: Internal
group: FM
section: Modulation
[FM - Frequency]
datatype: DOUBLE
def_value: 10
unit: Hz
set_cmd: FM:INT:FREQ
state_quant: FM - Source
state_value_1: Internal
group: FM
section: Modulation

